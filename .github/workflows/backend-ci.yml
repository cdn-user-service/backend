name: Backend CI/CD

on:
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Run tests'
        required: false
        default: 'true'
  push:
    branches: [ main, backend-java ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/cdn-user-service
  JAVA_VERSION: '11'
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository
  RUN_TESTS: ${{ github.event.inputs.run_tests || 'true' }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: .m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Run tests (conditionally)
      if: env.RUN_TESTS == 'true'
      run: mvn clean test -B

    - name: Run code analysis (conditionally)
      if: env.RUN_TESTS == 'true'
      run: mvn verify -B

    - name: Generate test report (conditionally & safely)
      if: env.RUN_TESTS == 'true' && success()
      uses: dorny/test-reporter@v1
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: false
        fail-on-empty: false

    - name: Build application
      run: mvn clean package -DskipTests -B

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven

    # - name: Run OWASP Dependency Check
    #   run: mvn org.owasp:dependency-check-maven:check -B

  build-and-push:
    needs: test #[test, security-scan]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,prefix={{branch}}-
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.IMAGE_NAME }}:latest
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Check if SARIF file exists
      id: check_sarif
      run: echo "sarif_exists=$(if [ -f trivy-results.sarif ]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT

    - name: Upload Trivy scan results
      if: steps.check_sarif.outputs.sarif_exists == 'true'
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Generate deployment summary
      run: |
        echo "## ðŸš€ Backend Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Service**: \`cdn-user-service\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Image**: \`${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Tags**: \`${{ steps.meta.outputs.tags }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Java Version**: \`${{ env.JAVA_VERSION }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Security Scan**: âœ… Completed" >> $GITHUB_STEP_SUMMARY